
#These rules are heavily influence by the Otto rule definition. But they are not
#guaranteed to obey it strictly.


#Rules map between DialogActs and strings for the tell-phone-number dialogue.
#
#A DialogAct is   Intent(LogicalForm, ...)

#Word categories are like in Otto, in terms of variables enclosed by brackets [$1]
#Word categories are not rules that produce DialogActs in parsing input sentences.
#They are notational shortcuts for expressing rules. 
#They are however used in parsing to allow combinatoric sequences of words to be interpreted.


#Intents:
#
#InformTD    =  InformTopicData
#InformDM    =  InformDialogManagement
#RequestTD   =  RequestTopicData
#RequestDM   =  RequestDialogManagement
#CheckTD     =  CheckTopicData
#CheckDM     =  CheckDialogManagement
#CheckTD     =  ConfirmTopicData
#CheckDM     =  ConfirmDialogManagement


#LogicalForm predicates
#
#ItemValue( value-LogicalForm )
#ItemType
#Digit
#DigitSequence
#IndexicalPosition
#IndexicalRelation



#Digit word categories
DigitCat[one] <-> one
DigitCat[two] <-> two
DigitCat[three] <-> three
DigitCat[four] <-> four
DigitCat[five] <-> five
DigitCat[six] <-> six
DigitCat[seven] <-> seven
DigitCat[eight] <-> eight
DigitCat[nine] <-> nine
DigitCat[zero] <-> zero
DigitCat[zero] <-> oh

#Sending of digit values as InformTopicData DialogActs
InformTD(ItemValue(Digit($1))) <-> {DigitCat[$1]}

InformTD(ItemValue(DigitSequence($1, $2))) <-> \
{DigitCat[$1]} {DigitCat[$2]} 
InformTD(ItemValue(DigitSequence($1, $2, $3))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} 
InformTD(ItemValue(DigitSequence($1, $2, $3, $4))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8, $9))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]} {DigitCat[$9]}
InformTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8, $9, $10))) <-> \
{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]} {DigitCat[$9]} {DigitCat[$10]}


#Sending of digit values as ConfirmTopicData DialogActs
#Right now, ruleProcessing.selectMaximallyCoveringRules() does not allow muliple DialogActs to 
#apply to the same set of words, so it does not return two interpretations of the same input
#.e.g. both InformTD and ConfirmTD.
#ConfirmTD(ItemValue(Digit($1))) <-> {DigitCat[$1]}
#
#ConfirmTD(ItemValue(DigitSequence($1, $2))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} 
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} 
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8, $9))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]} {DigitCat[$9]}
#ConfirmTD(ItemValue(DigitSequence($1, $2, $3, $4, $5, $6, $7, $8, $9, $10))) <-> \
#{DigitCat[$1]} {DigitCat[$2]} {DigitCat[$3]} {DigitCat[$4]} {DigitCat[$5]} {DigitCat[$6]} {DigitCat[$7]} {DigitCat[$8]} {DigitCat[$9]} #{DigitCat[$10]}






InformTD(ItemType(digit)) <-> digit
InformTD(ItemType(digit)) <-> number
InformTD(ItemType(area-code)) <-> area code
InformTD(ItemType(prefix)) <-> prefix
InformTD(ItemType(last-four-digits)) <-> last four digits
InformTD(ItemType(last-four-digits)) <-> last four numbers

#One possible approach
#InformTD(ItemType(telephone-number)) <-> {ObjectCat[telephone]} number
#ObjectCat[telephone] <-> telephone
#ObjectCat[telephone] <-> phone

#A second approach 
InfoTypeCat[telephone-number] <-> phone number
InfoTypeCat[telephone-number] <-> telephone number

InfoTypeCat[address] <-> place of residence
InfoTypeCat[address] <-> street address
InfoTypeCat[address] <-> address

InfoTypeCat[agent-name] <-> your name
InfoTypeCat[user-name] <-> my name

InfoNameCat[person] <-> person
InfoNameCat[computer] <-> computer


InformTD(self-name, Name($1)) <-> My name is {InfoNameCat[$1]}
InformTD(partner-name, Name($1)) <-> I believe your name is {InfoNameCat[$1]}





#Indexical word categories
IndexicalCat[first] <-> first
IndexicalCat[second] <-> second
IndexicalCat[third] <-> third
IndexicalCat[fourth] <-> fourth
IndexicalCat[fifth] <-> fifth
IndexicalCat[sixth] <-> sixth
IndexicalCat[seventh] <-> seventh
IndexicalCat[last] <-> last
IndexicalCat[last] <-> final
IndexicalCat[last] <-> the final

InformTD(IndexicalPosition($1)) <-> {IndexicalCat[$1]} number
InformTD(IndexicalPosition($1)) <-> {IndexicalCat[$1]} digit

InformTD(IndexicalRelation(first)) <-> first
InformTD(IndexicalRelation(second)) <-> second
InformTD(IndexicalRelation(third)) <-> third
InformTD(IndexicalRelation(last)) <-> last
InformTD(IndexicalRelation(last)) <-> final
InformTD(IndexicalRelation(previous)) <-> before
InformTD(IndexicalRelation(previous)) <-> last number
InformTD(IndexicalRelation(previous)) <-> previous number
InformTD(IndexicalRelation(next)) <-> after
InformTD(IndexicalRelation(next)) <-> next
InformTD(IndexicalRelation(next)) <-> then


#as in, "That's the third time I've given you the area code"
InformDM(Alignment()) <-> last time
InformDM(Alignment()) <-> next time
InformDM(Alignment()) <-> second time
InformDM(Alignment()) <-> third time
InformDM(Alignment()) <-> fourth time



CommandCat[tell-me] <-> tell me
CommandCat[tell-me] <-> give me
CommandCat[tell-me] <-> provide me
CommandCat[tell-me] <-> what is

CommandCat[tell-you] <-> tell you
CommandCat[tell-you] <-> give you
CommandCat[tell-you] <-> provide you
CommandCat[tell-you] <-> take this
CommandCat[tell-you] <-> take down this


RequestTopicData(SendReceive($1), InfoTopic($2)) <-> {CommandCat[$1]} {InfoTypeCat[$2]}

RequestTopicData(SendReceive(tell-me), InfoTopic(user-name)) <-> who am i
RequestTopicData(SendReceive(tell-me), InfoTopic(agent-name)) <-> who are you

InfoTypeCat[agent-name] <-> your name
InfoTypeCat[user-name] <-> my name

#If an InfoTypeCat is not recognized, at least notice that a RequestTopicData has been issued
RequestTopicData(tell-me) <-> {CommandCat[tell-me]}



InformTD(all-done) <-> We're all done

InformDialogManagement(misaligned-roles) <-> Hello?

InformDialogManagement(dialog-invitation) <-> Would you like to send or receive a phone number?

InformDialogManagement(misaligned-index-pointer) <-> we are out of sync about which digit we're talking about

InformDialogManagement(misaligned-digit-values) <-> we are out of sync about the phone number digits


ConfirmDialogManagement(affirmation-okay) <-> okay
ConfirmDialogManagement(affirmation-yes) <-> yes


InformDialogManagement(self-readiness) <-> i'm ready
InformDialogManagement(self-readiness) <-> i am ready
InformDialogManagement(self-not-readiness) <-> i'm not ready
InformDialogManagement(self-not-readiness) <-> i am not ready
InformDialogManagement(self-not-readiness) <-> please wait
InformDialogManagement(self-not-readiness) <-> wait please 


CheckDialogManagement(other-readiness) <-> are you ready



RequestDialogManagement(what) <-> what






#should not be necessary
#InfoTopic(telephone-number) <-> {InfoTypeCat[telephone-number]}

#RequestTopicData(SendReceive(tell-me), InfoTopic(name)) <-> {CommandCat[tell-me]}


#This would work, but we're breaking down into smaller pieces of a SendReceive and an InfoTopic
#e.g. User: tell me the phone number
#To preserve generality, do not specify specific non-function words like 'the'.
#RequestTopicData(receive-telephone-number) <-> {CommandCat[tell-me]} {InfoTypeCat[telephone-number]}
#
#e.g. User: I would like to tell you the phone number
#To preserve generality, do not specify specific non-function words like 'the'.
#RequestTopicData(send-telephone-number) <-> {CommandCat[tell-you]} {InfoTypeCat[telephone-number]}
